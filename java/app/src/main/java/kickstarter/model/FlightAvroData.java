/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package kickstarter.model;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class FlightAvroData extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5051099629934790308L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FlightAvroData\",\"namespace\":\"kickstarter.model\",\"fields\":[{\"name\":\"email_address\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"departure_time\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"departure_airport_code\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"arrival_time\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"arrival_airport_code\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"flight_number\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"confirmation_code\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"airline\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<FlightAvroData> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<FlightAvroData> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<FlightAvroData> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<FlightAvroData> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<FlightAvroData> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this FlightAvroData to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a FlightAvroData from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a FlightAvroData instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static FlightAvroData fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String email_address;
  private java.lang.String departure_time;
  private java.lang.String departure_airport_code;
  private java.lang.String arrival_time;
  private java.lang.String arrival_airport_code;
  private java.lang.String flight_number;
  private java.lang.String confirmation_code;
  private java.lang.String airline;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public FlightAvroData() {}

  /**
   * All-args constructor.
   * @param email_address The new value for email_address
   * @param departure_time The new value for departure_time
   * @param departure_airport_code The new value for departure_airport_code
   * @param arrival_time The new value for arrival_time
   * @param arrival_airport_code The new value for arrival_airport_code
   * @param flight_number The new value for flight_number
   * @param confirmation_code The new value for confirmation_code
   * @param airline The new value for airline
   */
  public FlightAvroData(java.lang.String email_address, java.lang.String departure_time, java.lang.String departure_airport_code, java.lang.String arrival_time, java.lang.String arrival_airport_code, java.lang.String flight_number, java.lang.String confirmation_code, java.lang.String airline) {
    this.email_address = email_address;
    this.departure_time = departure_time;
    this.departure_airport_code = departure_airport_code;
    this.arrival_time = arrival_time;
    this.arrival_airport_code = arrival_airport_code;
    this.flight_number = flight_number;
    this.confirmation_code = confirmation_code;
    this.airline = airline;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return email_address;
    case 1: return departure_time;
    case 2: return departure_airport_code;
    case 3: return arrival_time;
    case 4: return arrival_airport_code;
    case 5: return flight_number;
    case 6: return confirmation_code;
    case 7: return airline;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: email_address = value$ != null ? value$.toString() : null; break;
    case 1: departure_time = value$ != null ? value$.toString() : null; break;
    case 2: departure_airport_code = value$ != null ? value$.toString() : null; break;
    case 3: arrival_time = value$ != null ? value$.toString() : null; break;
    case 4: arrival_airport_code = value$ != null ? value$.toString() : null; break;
    case 5: flight_number = value$ != null ? value$.toString() : null; break;
    case 6: confirmation_code = value$ != null ? value$.toString() : null; break;
    case 7: airline = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'email_address' field.
   * @return The value of the 'email_address' field.
   */
  public java.lang.String getEmailAddress() {
    return email_address;
  }


  /**
   * Sets the value of the 'email_address' field.
   * @param value the value to set.
   */
  public void setEmailAddress(java.lang.String value) {
    this.email_address = value;
  }

  /**
   * Gets the value of the 'departure_time' field.
   * @return The value of the 'departure_time' field.
   */
  public java.lang.String getDepartureTime() {
    return departure_time;
  }


  /**
   * Sets the value of the 'departure_time' field.
   * @param value the value to set.
   */
  public void setDepartureTime(java.lang.String value) {
    this.departure_time = value;
  }

  /**
   * Gets the value of the 'departure_airport_code' field.
   * @return The value of the 'departure_airport_code' field.
   */
  public java.lang.String getDepartureAirportCode() {
    return departure_airport_code;
  }


  /**
   * Sets the value of the 'departure_airport_code' field.
   * @param value the value to set.
   */
  public void setDepartureAirportCode(java.lang.String value) {
    this.departure_airport_code = value;
  }

  /**
   * Gets the value of the 'arrival_time' field.
   * @return The value of the 'arrival_time' field.
   */
  public java.lang.String getArrivalTime() {
    return arrival_time;
  }


  /**
   * Sets the value of the 'arrival_time' field.
   * @param value the value to set.
   */
  public void setArrivalTime(java.lang.String value) {
    this.arrival_time = value;
  }

  /**
   * Gets the value of the 'arrival_airport_code' field.
   * @return The value of the 'arrival_airport_code' field.
   */
  public java.lang.String getArrivalAirportCode() {
    return arrival_airport_code;
  }


  /**
   * Sets the value of the 'arrival_airport_code' field.
   * @param value the value to set.
   */
  public void setArrivalAirportCode(java.lang.String value) {
    this.arrival_airport_code = value;
  }

  /**
   * Gets the value of the 'flight_number' field.
   * @return The value of the 'flight_number' field.
   */
  public java.lang.String getFlightNumber() {
    return flight_number;
  }


  /**
   * Sets the value of the 'flight_number' field.
   * @param value the value to set.
   */
  public void setFlightNumber(java.lang.String value) {
    this.flight_number = value;
  }

  /**
   * Gets the value of the 'confirmation_code' field.
   * @return The value of the 'confirmation_code' field.
   */
  public java.lang.String getConfirmationCode() {
    return confirmation_code;
  }


  /**
   * Sets the value of the 'confirmation_code' field.
   * @param value the value to set.
   */
  public void setConfirmationCode(java.lang.String value) {
    this.confirmation_code = value;
  }

  /**
   * Gets the value of the 'airline' field.
   * @return The value of the 'airline' field.
   */
  public java.lang.String getAirline() {
    return airline;
  }


  /**
   * Sets the value of the 'airline' field.
   * @param value the value to set.
   */
  public void setAirline(java.lang.String value) {
    this.airline = value;
  }

  /**
   * Creates a new FlightAvroData RecordBuilder.
   * @return A new FlightAvroData RecordBuilder
   */
  public static kickstarter.model.FlightAvroData.Builder newBuilder() {
    return new kickstarter.model.FlightAvroData.Builder();
  }

  /**
   * Creates a new FlightAvroData RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new FlightAvroData RecordBuilder
   */
  public static kickstarter.model.FlightAvroData.Builder newBuilder(kickstarter.model.FlightAvroData.Builder other) {
    if (other == null) {
      return new kickstarter.model.FlightAvroData.Builder();
    } else {
      return new kickstarter.model.FlightAvroData.Builder(other);
    }
  }

  /**
   * Creates a new FlightAvroData RecordBuilder by copying an existing FlightAvroData instance.
   * @param other The existing instance to copy.
   * @return A new FlightAvroData RecordBuilder
   */
  public static kickstarter.model.FlightAvroData.Builder newBuilder(kickstarter.model.FlightAvroData other) {
    if (other == null) {
      return new kickstarter.model.FlightAvroData.Builder();
    } else {
      return new kickstarter.model.FlightAvroData.Builder(other);
    }
  }

  /**
   * RecordBuilder for FlightAvroData instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FlightAvroData>
    implements org.apache.avro.data.RecordBuilder<FlightAvroData> {

    private java.lang.String email_address;
    private java.lang.String departure_time;
    private java.lang.String departure_airport_code;
    private java.lang.String arrival_time;
    private java.lang.String arrival_airport_code;
    private java.lang.String flight_number;
    private java.lang.String confirmation_code;
    private java.lang.String airline;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(kickstarter.model.FlightAvroData.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.email_address)) {
        this.email_address = data().deepCopy(fields()[0].schema(), other.email_address);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.departure_time)) {
        this.departure_time = data().deepCopy(fields()[1].schema(), other.departure_time);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.departure_airport_code)) {
        this.departure_airport_code = data().deepCopy(fields()[2].schema(), other.departure_airport_code);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.arrival_time)) {
        this.arrival_time = data().deepCopy(fields()[3].schema(), other.arrival_time);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.arrival_airport_code)) {
        this.arrival_airport_code = data().deepCopy(fields()[4].schema(), other.arrival_airport_code);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.flight_number)) {
        this.flight_number = data().deepCopy(fields()[5].schema(), other.flight_number);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.confirmation_code)) {
        this.confirmation_code = data().deepCopy(fields()[6].schema(), other.confirmation_code);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.airline)) {
        this.airline = data().deepCopy(fields()[7].schema(), other.airline);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
    }

    /**
     * Creates a Builder by copying an existing FlightAvroData instance
     * @param other The existing instance to copy.
     */
    private Builder(kickstarter.model.FlightAvroData other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.email_address)) {
        this.email_address = data().deepCopy(fields()[0].schema(), other.email_address);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.departure_time)) {
        this.departure_time = data().deepCopy(fields()[1].schema(), other.departure_time);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.departure_airport_code)) {
        this.departure_airport_code = data().deepCopy(fields()[2].schema(), other.departure_airport_code);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.arrival_time)) {
        this.arrival_time = data().deepCopy(fields()[3].schema(), other.arrival_time);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.arrival_airport_code)) {
        this.arrival_airport_code = data().deepCopy(fields()[4].schema(), other.arrival_airport_code);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.flight_number)) {
        this.flight_number = data().deepCopy(fields()[5].schema(), other.flight_number);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.confirmation_code)) {
        this.confirmation_code = data().deepCopy(fields()[6].schema(), other.confirmation_code);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.airline)) {
        this.airline = data().deepCopy(fields()[7].schema(), other.airline);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the 'email_address' field.
      * @return The value.
      */
    public java.lang.String getEmailAddress() {
      return email_address;
    }


    /**
      * Sets the value of the 'email_address' field.
      * @param value The value of 'email_address'.
      * @return This builder.
      */
    public kickstarter.model.FlightAvroData.Builder setEmailAddress(java.lang.String value) {
      validate(fields()[0], value);
      this.email_address = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'email_address' field has been set.
      * @return True if the 'email_address' field has been set, false otherwise.
      */
    public boolean hasEmailAddress() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'email_address' field.
      * @return This builder.
      */
    public kickstarter.model.FlightAvroData.Builder clearEmailAddress() {
      email_address = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'departure_time' field.
      * @return The value.
      */
    public java.lang.String getDepartureTime() {
      return departure_time;
    }


    /**
      * Sets the value of the 'departure_time' field.
      * @param value The value of 'departure_time'.
      * @return This builder.
      */
    public kickstarter.model.FlightAvroData.Builder setDepartureTime(java.lang.String value) {
      validate(fields()[1], value);
      this.departure_time = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'departure_time' field has been set.
      * @return True if the 'departure_time' field has been set, false otherwise.
      */
    public boolean hasDepartureTime() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'departure_time' field.
      * @return This builder.
      */
    public kickstarter.model.FlightAvroData.Builder clearDepartureTime() {
      departure_time = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'departure_airport_code' field.
      * @return The value.
      */
    public java.lang.String getDepartureAirportCode() {
      return departure_airport_code;
    }


    /**
      * Sets the value of the 'departure_airport_code' field.
      * @param value The value of 'departure_airport_code'.
      * @return This builder.
      */
    public kickstarter.model.FlightAvroData.Builder setDepartureAirportCode(java.lang.String value) {
      validate(fields()[2], value);
      this.departure_airport_code = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'departure_airport_code' field has been set.
      * @return True if the 'departure_airport_code' field has been set, false otherwise.
      */
    public boolean hasDepartureAirportCode() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'departure_airport_code' field.
      * @return This builder.
      */
    public kickstarter.model.FlightAvroData.Builder clearDepartureAirportCode() {
      departure_airport_code = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'arrival_time' field.
      * @return The value.
      */
    public java.lang.String getArrivalTime() {
      return arrival_time;
    }


    /**
      * Sets the value of the 'arrival_time' field.
      * @param value The value of 'arrival_time'.
      * @return This builder.
      */
    public kickstarter.model.FlightAvroData.Builder setArrivalTime(java.lang.String value) {
      validate(fields()[3], value);
      this.arrival_time = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'arrival_time' field has been set.
      * @return True if the 'arrival_time' field has been set, false otherwise.
      */
    public boolean hasArrivalTime() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'arrival_time' field.
      * @return This builder.
      */
    public kickstarter.model.FlightAvroData.Builder clearArrivalTime() {
      arrival_time = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'arrival_airport_code' field.
      * @return The value.
      */
    public java.lang.String getArrivalAirportCode() {
      return arrival_airport_code;
    }


    /**
      * Sets the value of the 'arrival_airport_code' field.
      * @param value The value of 'arrival_airport_code'.
      * @return This builder.
      */
    public kickstarter.model.FlightAvroData.Builder setArrivalAirportCode(java.lang.String value) {
      validate(fields()[4], value);
      this.arrival_airport_code = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'arrival_airport_code' field has been set.
      * @return True if the 'arrival_airport_code' field has been set, false otherwise.
      */
    public boolean hasArrivalAirportCode() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'arrival_airport_code' field.
      * @return This builder.
      */
    public kickstarter.model.FlightAvroData.Builder clearArrivalAirportCode() {
      arrival_airport_code = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'flight_number' field.
      * @return The value.
      */
    public java.lang.String getFlightNumber() {
      return flight_number;
    }


    /**
      * Sets the value of the 'flight_number' field.
      * @param value The value of 'flight_number'.
      * @return This builder.
      */
    public kickstarter.model.FlightAvroData.Builder setFlightNumber(java.lang.String value) {
      validate(fields()[5], value);
      this.flight_number = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'flight_number' field has been set.
      * @return True if the 'flight_number' field has been set, false otherwise.
      */
    public boolean hasFlightNumber() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'flight_number' field.
      * @return This builder.
      */
    public kickstarter.model.FlightAvroData.Builder clearFlightNumber() {
      flight_number = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'confirmation_code' field.
      * @return The value.
      */
    public java.lang.String getConfirmationCode() {
      return confirmation_code;
    }


    /**
      * Sets the value of the 'confirmation_code' field.
      * @param value The value of 'confirmation_code'.
      * @return This builder.
      */
    public kickstarter.model.FlightAvroData.Builder setConfirmationCode(java.lang.String value) {
      validate(fields()[6], value);
      this.confirmation_code = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'confirmation_code' field has been set.
      * @return True if the 'confirmation_code' field has been set, false otherwise.
      */
    public boolean hasConfirmationCode() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'confirmation_code' field.
      * @return This builder.
      */
    public kickstarter.model.FlightAvroData.Builder clearConfirmationCode() {
      confirmation_code = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'airline' field.
      * @return The value.
      */
    public java.lang.String getAirline() {
      return airline;
    }


    /**
      * Sets the value of the 'airline' field.
      * @param value The value of 'airline'.
      * @return This builder.
      */
    public kickstarter.model.FlightAvroData.Builder setAirline(java.lang.String value) {
      validate(fields()[7], value);
      this.airline = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'airline' field has been set.
      * @return True if the 'airline' field has been set, false otherwise.
      */
    public boolean hasAirline() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'airline' field.
      * @return This builder.
      */
    public kickstarter.model.FlightAvroData.Builder clearAirline() {
      airline = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public FlightAvroData build() {
      try {
        FlightAvroData record = new FlightAvroData();
        record.email_address = fieldSetFlags()[0] ? this.email_address : (java.lang.String) defaultValue(fields()[0]);
        record.departure_time = fieldSetFlags()[1] ? this.departure_time : (java.lang.String) defaultValue(fields()[1]);
        record.departure_airport_code = fieldSetFlags()[2] ? this.departure_airport_code : (java.lang.String) defaultValue(fields()[2]);
        record.arrival_time = fieldSetFlags()[3] ? this.arrival_time : (java.lang.String) defaultValue(fields()[3]);
        record.arrival_airport_code = fieldSetFlags()[4] ? this.arrival_airport_code : (java.lang.String) defaultValue(fields()[4]);
        record.flight_number = fieldSetFlags()[5] ? this.flight_number : (java.lang.String) defaultValue(fields()[5]);
        record.confirmation_code = fieldSetFlags()[6] ? this.confirmation_code : (java.lang.String) defaultValue(fields()[6]);
        record.airline = fieldSetFlags()[7] ? this.airline : (java.lang.String) defaultValue(fields()[7]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<FlightAvroData>
    WRITER$ = (org.apache.avro.io.DatumWriter<FlightAvroData>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<FlightAvroData>
    READER$ = (org.apache.avro.io.DatumReader<FlightAvroData>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.email_address);

    out.writeString(this.departure_time);

    out.writeString(this.departure_airport_code);

    out.writeString(this.arrival_time);

    out.writeString(this.arrival_airport_code);

    out.writeString(this.flight_number);

    out.writeString(this.confirmation_code);

    out.writeString(this.airline);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.email_address = in.readString();

      this.departure_time = in.readString();

      this.departure_airport_code = in.readString();

      this.arrival_time = in.readString();

      this.arrival_airport_code = in.readString();

      this.flight_number = in.readString();

      this.confirmation_code = in.readString();

      this.airline = in.readString();

    } else {
      for (int i = 0; i < 8; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.email_address = in.readString();
          break;

        case 1:
          this.departure_time = in.readString();
          break;

        case 2:
          this.departure_airport_code = in.readString();
          break;

        case 3:
          this.arrival_time = in.readString();
          break;

        case 4:
          this.arrival_airport_code = in.readString();
          break;

        case 5:
          this.flight_number = in.readString();
          break;

        case 6:
          this.confirmation_code = in.readString();
          break;

        case 7:
          this.airline = in.readString();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










